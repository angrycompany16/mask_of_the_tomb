Mechanic ideas:
 - The slam box

Let's just try to make some simple puzzles with these few mechanics

Areas:
 - Baggage Basement
 - Mr. Portman's library
 - The observatory
 - Stars of the sky

Module structure and setup
Each module has an entity, which is essentially a tree , which is the thing that actually gets updated in each iteration of the game loop. 
All the modifying code of an entity should be handled in Update(), PreUpdate() and PostUpdate(), so to expose functionality to other entities we have events which allow entities to communicate
These are declared in a separate module so that it's possible to import only the events that one is interested in for that exact gameobject. Events can also be used for communication within entities
This means a few things for the project as of right now
 - The game.go update function should essentially be empty
 - An entity should never be the child (as a struct) of another entity

Also, write more functional code. Not every piece of code needs to be a pure function, but when it's simple
to do so, do it.

Default folder structure for entity:
 - [entityName].go (Contains the entity methods)
 - [entityNameAdvertiser].go (Contains the advertiser object if there is one)
 - [entityNameData].go (contains any (mostly) static data that the entity needs to function)
 - [entityNameCore].go (Contains other methods defined on the entity's data struct)
 - [entityNameEvents].go (Contains the events defined on the entity object)
 - [componentName].go (files for member types of the entity)